# Versão do Ubuntu
os: linux
dist: focal

# Linguagem Utilizada para Desenvolver a Aplicação
language: python

# Versão que a aplicação suporta.
python:
  - "3.8"

# Integração com SonarCloud
addons:
  sonarcloud:
    organization: rafyy2102
    token: ${SONAR_TOKEN}  

before_install:
  - openssl aes-256-cbc -K $encrypted_7160780ec53e_key -iv $encrypted_7160780ec53e_iv -in gcpterraformkey.json.enc -out ../gcpterraformkey.json -d

jobs:
  include:
    - stage: Build & Tests
      name: "Unit Test, Quality & Security"

      # Instalação de Módulos que são necessários para a Aplicação.
      install:
        - pip install flask flask-wtf coverage

      # Defini o script de Teste que deve rodar toda vez que o código for alterado.
      script:
        #- pytest -v test.py || travis_terminate 1;
        - coverage run test.py || travis_terminate 1;
        - coverage report app.py || travis_terminate 1;
        - coverage xml app.py || travis_terminate 1;
        - sonar-scanner || travis_terminate 1;

    - stage: Stage Deploy
      name: Heroku Deploy
      script: skip

      # Definir o Deploy no Heroku
      deploy:
        provider: heroku
        strategy: api
        api_key: $HEROKU_API_KEY
        edge: true
        app: devopslab-rafyy
        on:
          branch: main

    - stage: Stage Test
      name: GET URL Stage
      script:
        - curl https://devopslab-rafyy.herokuapp.com/ | grep "Oi Rafyy belezinha" || travis_terminate 1; 
        
    - stage: Production Deploy
      name: Google Api Engine
      script: skip

      # Definir o Deploy no Google Cloud
      deploy:
        provider: gae
        keyfile: ../gcpterraformkey.json
        project: lab-devops-cloud-t3-rafyy
        on:
          branch: main

    - stage: Production Test
      name: GET URL Production
      script:
        - curl https://lab-devops-cloud-t3-rafyy.uc.r.appspot.com/ | grep "Oi Rafyy belezinha" || travis_terminate 1; 